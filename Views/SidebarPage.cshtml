<!-- View (simplified) -->
@inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage<ContentModels.SidebarPage>
@inject ISiteService _ISiteService;
@{
    Layout = "Main";

     var childNodes = _ISiteService.GetSideBarChildNodes();

}


<main class="container flex flex-col lg:flex-row gap-5 mx-auto px-4 md:px-6 lg:px-8 py-12">
    <!-- Desktop Sidebar -->
    <div class="w-[30%] h-full hidden lg:flex flex-col gap-5" id="sideMenu">
        <div class="container bg-[#F7F7F7] py-12 rounded-[8px]">
            <nav>
                <ul class="about-us-nav main-nav">
                    @if (childNodes?.Any() == true)
                    {
                        foreach (var node in childNodes)
                        {
                            <li>
                                <a href="#"
                                   class="text-aeblack-900 no-underline active"
                                   onclick="loadContent(@node.Id, @node.IsNewPage.ToString().ToLower(),
                            '@Html.Raw(!string.IsNullOrEmpty(node.ReturnURL) ? node.ReturnURL.Replace("'", "\\'") : "null")', event)">

                                    <h5 class="text-[20px]">@node.Name</h5>
                                </a>
                            </li>
                        }
                    }
                    else
                    {
                        <li>No pages found</li>
                    }
                </ul>
            </nav>
        </div>
    </div>

    <!-- Content Area -->
    <div class="w-full lg:w-[70%] h-full" id="sidebar-content">
        @{
            var res = Model?.Children?.FirstOrDefault().SafeCast<MainSidebar>();

        }

        @await Html.PartialAsync("_SidebarPageContent", res)

    </div>
</main>

<script>
           async function loadContent(nodeId, isNewPage, returnUrl, event) {
        event.preventDefault();
        try {
            const response = await fetch(`/api/sidebar/content/${nodeId}`);

            if (!response.ok) {
                throw new Error(`HTTP error! status: ${response.status}`);
            }

            const html = await response.text();

            // If it's a new page, display the content as the full page and hide the sidebar
            if (isNewPage) {
                document.querySelector("main").classList.add("full-content");  // Add class to modify layout
                document.getElementById("sidebar-content").innerHTML = html;  // Set the content in the content area
            document.getElementById("sideMenu").style.display = "none";  // Hide the sidebar
            } else {
                document.getElementById("sidebar-content").innerHTML = html;  // Normal content load with sidebar
            }

        } catch (error) {
            console.error("Error loading content:", error);
            // Optionally show error message to user
            document.getElementById("sidebar-content").innerHTML = `
                <div class="error-message">
                    Failed to load content. Please try again.
                </div>
            `;
        }
    }




</script>
